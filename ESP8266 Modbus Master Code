//Baud Rate: 9600
//Stop Bits: 1
//Parity: None
//Data bits: 8
//Holding Registers (0x03) at addresses 0, 1, and 2.
//unsigned 16-bit format

-------------------------------------------------

#include <ModbusMaster.h>
#include <SoftwareSerial.h>

// Define RS485 TX/RX pins (adjust based on your ESP8266 wiring)
#define RX_PIN 12 // D6
#define TX_PIN 13 // D7

// Create Modbus serial connection
SoftwareSerial modbusSerial(RX_PIN, TX_PIN); // RX, TX
ModbusMaster node;

void preTransmission() {
  digitalWrite(LED_BUILTIN, HIGH); // Indicate TX
}

void postTransmission() {
  digitalWrite(LED_BUILTIN, LOW); // End TX
}

void setup() {
  pinMode(LED_BUILTIN, OUTPUT);
  
  // Debug serial
  Serial.begin(115200);
  delay(1000);

  // Start RS485 Modbus serial
  modbusSerial.begin(9600);

  // Setup Modbus: Slave ID 1
  node.begin(1, modbusSerial);
  node.preTransmission(preTransmission);
  node.postTransmission(postTransmission);
}

void loop() {
  uint8_t result;
  uint16_t temp, humidity, ph;

  // Read 3 holding registers starting from address 0
  result = node.readHoldingRegisters(0x0000, 3);

  if (result == node.ku8MBSuccess) {
    temp = node.getResponseBuffer(0);
    humidity = node.getResponseBuffer(1);
    ph = node.getResponseBuffer(2);

    Serial.print("Temperature: ");
    Serial.println(temp);

    Serial.print("Humidity: ");
    Serial.println(humidity);

    Serial.print("pH: ");
    Serial.println(ph);
  } else {
    Serial.print("Modbus Error: ");
    Serial.println(result);
  }

  delay(1000); // Poll every second
}
